[gd_scene load_steps=13 format=2]

[ext_resource path="res://car/car.tscn" type="PackedScene" id=1]
[ext_resource path="res://root/mat_floor/mat_floor.tres" type="Material" id=3]
[ext_resource path="res://root/mat_floor_smooth/mat_floor_smooth.tres" type="Material" id=5]
[ext_resource path="res://root/noise.gd" type="Script" id=6]
[ext_resource path="res://root/reset.gd" type="Script" id=7]
[ext_resource path="res://tracks/track_gen.tscn" type="PackedScene" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends RichTextLabel

# Declare member variables here. Examples:
const enabled = false
const update_interval = 0.1

# Car state that will be updated every update_interval
var total_time = 0
var last_update = -1
var wheel_rpm = [0,0,0,0]
var speed = 0.0
var shmem_status = false

# Nodes to get data from
var node_vehicle = null
var node_wheel_fl = null
var node_wheel_fr = null
var node_wheel_rl = null
var node_wheel_rr = null
const telementry_text_format = \"motor_voltage: %f\\nservo_angle: %f\\nmotor_rpm: %f\\nwheel_rpm (FL,FR,RL,RR): %f %f %f %f\\nspeed (km/h): %f\\nskidding: %s\\nwheel_contact (FL,FR,RL,RR): %s %s %s %s\\nshmem_status: %s\"

func _ready():
	node_vehicle = get_node(\"../Car/VehicleBody\")
	node_wheel_fl = node_vehicle.get_node(\"CarWheelFL\")
	node_wheel_fr = node_vehicle.get_node(\"CarWheelFR\")
	node_wheel_rl = node_vehicle.get_node(\"CarWheelRL\")
	node_wheel_rr = node_vehicle.get_node(\"CarWheelRR\")

func _process(delta):
	if enabled:
		total_time += delta
		var motor_voltage = node_vehicle.motor_v
		var steer_angle = node_vehicle.servo_angle
		var motor_rpm = node_vehicle.motor_kv * motor_voltage
		var is_skidding = !bool(int(node_wheel_fl.get_skidinfo()) || int(node_wheel_fr.get_skidinfo()) || int(node_wheel_rl.get_skidinfo()) || int(node_wheel_rr.get_skidinfo()))
		
		if (last_update + update_interval < total_time):
			last_update = total_time
			wheel_rpm = [
				int(node_wheel_fl.get_rpm()), 
				int(node_wheel_fr.get_rpm()), 
				int(node_wheel_rl.get_rpm()), 
				int(node_wheel_rr.get_rpm())
			]
			speed = ((2 * 3.14159 * 0.0325 * wheel_rpm[0])*60)/1000
		
		var fl_ontrack = node_wheel_fl.get_global_transform().origin[1] > 0.3199
		var fr_ontrack = node_wheel_fr.get_global_transform().origin[1] > 0.3199
		var rl_ontrack = node_wheel_rl.get_global_transform().origin[1] > 0.31
		var rr_ontrack = node_wheel_rr.get_global_transform().origin[1] > 0.31
			
		self.text = telementry_text_format % [
			motor_voltage, 
			steer_angle, 
			motor_rpm, 
			wheel_rpm[0], 
			wheel_rpm[1], 
			wheel_rpm[2], 
			wheel_rpm[3], 
			speed, 
			str(is_skidding), 
			str(fl_ontrack), 
			str(fr_ontrack), 
			str(rl_ontrack), 
			str(rr_ontrack),
			str(node_vehicle.shmem_accessible)
		]
"

[sub_resource type="PhysicsMaterial" id=2]
rough = true

[sub_resource type="BoxShape" id=3]
margin = 0.001
extents = Vector3( 0.5, 1, 0.5 )

[sub_resource type="CubeMesh" id=4]
material = ExtResource( 3 )
size = Vector3( 6, 2, 6 )

[sub_resource type="Skin" id=5]

[sub_resource type="CubeMesh" id=6]
material = ExtResource( 5 )
size = Vector3( 6, 2, 6 )

[node name="Root" type="Spatial"]

[node name="DebugInfo" type="RichTextLabel" parent="."]
margin_right = 600.0
margin_bottom = 338.0
custom_colors/default_color = Color( 0, 0.360784, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResetButton" type="Button" parent="."]
visible = false
anchor_left = 1.0
anchor_right = 1.0
margin_left = -20.0
margin_bottom = 20.0
grow_horizontal = 0
action_mode = 0
script = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Floor" type="StaticBody" parent="."]
transform = Transform( 100, 0, 0, 0, 1, 0, 0, 0, 100, -4.65617, -1, -4.25128 )
physics_material_override = SubResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="Floor"]
shape = SubResource( 3 )

[node name="FloorSpots" type="MeshInstance" parent="Floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000251878, 0, 0.00109505 )
mesh = SubResource( 4 )
skin = SubResource( 5 )
material/0 = ExtResource( 3 )

[node name="FloorSmooth" type="MeshInstance" parent="Floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000251878, 0, 0.00109505 )
visible = false
mesh = SubResource( 6 )
skin = SubResource( 5 )
material/0 = null

[node name="Car" parent="." instance=ExtResource( 1 )]
transform = Transform( -1, 0, -3.25841e-07, 0, 1, 0, 3.25841e-07, 0, -1, 0.131428, 0.354999, 0.116497 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, -28.7853, 4.50887, 0 )
light_energy = 0.05
shadow_enabled = true

[node name="SpotLight" type="SpotLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, -4.48968, 16.3595, 9.25188 )
light_energy = 5.0
light_indirect_energy = 2.0
shadow_enabled = true
spot_range = 36.2
spot_angle = 75.0

[node name="SpotLight2" type="SpotLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, -4.48968, 9.23735, 16.7731 )
shadow_enabled = true
spot_range = 20.0

[node name="TrackGen" parent="." instance=ExtResource( 8 )]

[node name="NoiseLayer1" type="Sprite" parent="."]
visible = false
modulate = Color( 0.196078, 0.196078, 0.196078, 0.196078 )
light_mask = -2147483647
position = Vector2( 301.124, 167.489 )
scale = Vector2( -1.21624, 0.685508 )
region_rect = Rect2( 0, 0, 550, 550 )
script = ExtResource( 6 )

[node name="NoiseLayer2" type="Sprite" parent="."]
visible = false
modulate = Color( 0.196078, 0.196078, 0.196078, 0.196078 )
light_mask = -2147483647
position = Vector2( 301.124, 167.489 )
scale = Vector2( -1.21624, 0.685508 )
region_rect = Rect2( 0, 0, 550, 550 )
script = ExtResource( 6 )
